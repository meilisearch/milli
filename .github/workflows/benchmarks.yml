name: Benchmarks

on:
  workflow_dispatch:
    inputs:
      dataset_name:
        description: 'The name of the dataset used to benchmark (search_songs, search_wiki or indexing)'
        required: false
        default: 'search_songs'
  schedule:
    - cron: "0 12 * * FRI" # every friday at 12:00PM
      env:
        CRON_BENCH_NAME: 'search_songs'
  push:
    - name: Set env var
      shell: bash
      run: export CRON_BENCH_NAME=seach_songs

env:
  HOME: "/home/runner" # The actions-rs/toolchain@v1 can fail we have no $HOME defined
  INPUT_BENCH_NAME: ${{ github.event.inputs.dataset_name }}

jobs:
  benchmarks:
    name: Run and upload benchmarks
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Set variables
      - name: Set current branch name
        shell: bash
        run: echo "##[set-output name=name;]$(echo ${GITHUB_REF#refs/heads/})"
        id: current_branch
      - name: Set normalized current branch name # Replace `/` by `_` in branch name to avoid issues when pushing to S3
        shell: bash
        run: echo "##[set-output name=name;]$(echo ${GITHUB_REF#refs/heads/} | tr '/' '_')"
        id: normalized_current_branch
      - name: Set shorter commit SHA
        shell: bash
        run: echo "##[set-output name=short;]$(echo $GITHUB_SHA | cut -c1-8)"
        id: commit_sha
      - name: Set benchmark name
        shell: bash
        run: echo "##[set-output name=name;]$(if [[ ! -z $INPUT_BENCH_NAME ]]; then echo $INPUT_BENCH_NAME ; else echo $CRON_BENCH_NAME ; fi)"
        id: bench_name
      - name: Set file basename with format "dataset_branch_commitSHA"
        shell: bash
        run: echo "##[set-output name=basename;]$(echo ${{ steps.bench_name.outputs.name }}_${{ steps.normalized_current_branch.outputs.name }}_${{ steps.commit_sha.outputs.short }})"
        id: file

      # Run benchmarks
      - name: Run benchmarks - Dataset ${{ steps.bench_name.outputs.name }} - Branch ${{ steps.current_branch.outputs.name }} - Commit ${{ steps.commit_sha.outputs.short }}
        run: |
          cd benchmarks
          cargo bench --bench ${{ steps.bench_name.outputs.name }} -- --save-baseline ${{ steps.file.outputs.basename }}

      # Generate critcmp files
      - name: Install critcmp
        run: cargo install critcmp
      - name: Export cripcmp file
        run: |
          critcmp --export ${{ steps.file.outputs.basename }} > ${{ steps.file.outputs.basename }}.json

      # Upload benchmarks
      - name: Upload ${{ steps.file.outputs.basename }}.json to DO Spaces # DigitalOcean Spaces = S3
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_SPACES_ACCESS_KEY }}
          secret_key: ${{ secrets.DO_SPACES_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACES_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACES_SPACE_REGION }}
          source: ${{ steps.file.outputs.basename }}.json
          out_dir: critcmp_results

      # Helper
      - name: 'README: compare with another benchmark'
        run: |
          echo "${{ steps.file.outputs.basename }}.json has just been pushed."
          echo 'How to compare this benchmark with another one?'
          echo '  - Check the available files with: ./benchmarks/scripts/list.sh'
          echo "  - Run the following command: ./benchmaks/scipts/compare.sh <file-to-compare-with> ${{ steps.file.outputs.basename }}.json"
